// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again:
// With a Flutter package, run `flutter pub run build_runner build`.
// With a Dart package, run `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart';
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/trip_model_db.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <ModelEntity>[
  ModelEntity(
      id: const IdUid(2, 2893473584258115809),
      name: 'TripModelDb',
      lastPropertyId: const IdUid(6, 702428288202178188),
      flags: 0,
      properties: <ModelProperty>[
        ModelProperty(
            id: const IdUid(1, 3419117702569959410),
            name: 'id',
            type: 6,
            flags: 1),
        ModelProperty(
            id: const IdUid(2, 2385370489306381842),
            name: 'title',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(3, 9072266428611088795),
            name: 'partners',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(4, 6122339644995537344),
            name: 'durationInDays',
            type: 6,
            flags: 0),
        ModelProperty(
            id: const IdUid(5, 7817537238515962523),
            name: 'startDate',
            type: 9,
            flags: 0),
        ModelProperty(
            id: const IdUid(6, 702428288202178188),
            name: 'endDate',
            type: 9,
            flags: 0)
      ],
      relations: <ModelRelation>[],
      backlinks: <ModelBacklink>[])
];

/// Open an ObjectBox store with the model declared in this file.
Future<Store> openStore(
        {String? directory,
        int? maxDBSizeInKB,
        int? fileMode,
        int? maxReaders,
        bool queriesCaseSensitiveDefault = true,
        String? macosApplicationGroup}) async =>
    Store(getObjectBoxModel(),
        directory: directory ?? (await defaultStoreDirectory()).path,
        maxDBSizeInKB: maxDBSizeInKB,
        fileMode: fileMode,
        maxReaders: maxReaders,
        queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
        macosApplicationGroup: macosApplicationGroup);

/// ObjectBox model definition, pass it to [Store] - Store(getObjectBoxModel())
ModelDefinition getObjectBoxModel() {
  final model = ModelInfo(
      entities: _entities,
      lastEntityId: const IdUid(2, 2893473584258115809),
      lastIndexId: const IdUid(0, 0),
      lastRelationId: const IdUid(0, 0),
      lastSequenceId: const IdUid(0, 0),
      retiredEntityUids: const [7136993120287254219],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        339341007447055620,
        6720924476228979366,
        5094053940734025819,
        9148767463141214492,
        2928860882748397078,
        955306485077054622
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, EntityDefinition>{
    TripModelDb: EntityDefinition<TripModelDb>(
        model: _entities[0],
        toOneRelations: (TripModelDb object) => [],
        toManyRelations: (TripModelDb object) => {},
        getId: (TripModelDb object) => object.id,
        setId: (TripModelDb object, int id) {
          object.id = id;
        },
        objectToFB: (TripModelDb object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          final partnersOffset = fbb.writeString(object.partners);
          final startDateOffset = fbb.writeString(object.startDate);
          final endDateOffset = fbb.writeString(object.endDate);
          fbb.startTable(7);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, titleOffset);
          fbb.addOffset(2, partnersOffset);
          fbb.addInt64(3, object.durationInDays);
          fbb.addOffset(4, startDateOffset);
          fbb.addOffset(5, endDateOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);

          final object = TripModelDb(
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 6, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 8, ''),
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 10, 0),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 12, ''),
              const fb.StringReader(asciiOptimization: true)
                  .vTableGet(buffer, rootOffset, 14, ''))
            ..id =
                const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);

          return object;
        })
  };

  return ModelDefinition(model, bindings);
}

/// [TripModelDb] entity fields to define ObjectBox queries.
class TripModelDb_ {
  /// see [TripModelDb.id]
  static final id =
      QueryIntegerProperty<TripModelDb>(_entities[0].properties[0]);

  /// see [TripModelDb.title]
  static final title =
      QueryStringProperty<TripModelDb>(_entities[0].properties[1]);

  /// see [TripModelDb.partners]
  static final partners =
      QueryStringProperty<TripModelDb>(_entities[0].properties[2]);

  /// see [TripModelDb.durationInDays]
  static final durationInDays =
      QueryIntegerProperty<TripModelDb>(_entities[0].properties[3]);

  /// see [TripModelDb.startDate]
  static final startDate =
      QueryStringProperty<TripModelDb>(_entities[0].properties[4]);

  /// see [TripModelDb.endDate]
  static final endDate =
      QueryStringProperty<TripModelDb>(_entities[0].properties[5]);
}
